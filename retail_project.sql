-- show all products --

select * from retail;

-- check null values--

select * from retail 
where Date is null
or
Customer_ID is null
or
Gender is null
or
Age is null
or 
product_category is null
or 
Quantity is null
or
price_per_unit is null 
or
Total_amount is null;

-- 1.Retrieve the total number of transactions.--

select count(*) as transaction
 from retail;
 
 
-- 2.. Find the total sales generated by each product category.--

select product_category ,sum(total_amount) as amount
from retail
group by product_category;

-- 3.Find the most popular product category based on the number of transactions--

select count(*)as transaction_id ,product_category
from retail
group by product_category
order by transaction_id;

-- 4 Find customers with more than 5 transactions--

select customer_ID, count(*)as transaction_id
from retail
group by Customer_ID
having count(*) >5
order by Customer_ID;

-- 5.Show the number of male vs. female customers who purchased products.--

select gender,count(distinct customer_id)
product_category
from retail
group by gender
order by product_category;

-- 6.Identify the day with the highest total sales --

select date,sum(Total_amount)as amount
from retail
group by date
order by amount desc
limit 1;

-- 7.Create a query to calculate the percentage contribution of each product category to total sales--

select product_category,
sum(total_amount) as product_sale,
(sum(total_amount) * 100 /(select sum(total_amount) from retail ))as total_sale_percent
from retail 
group by product_category;

 -- 8.Find the most profitable product category-

select price_per_unit,sum(quantity)as total_qty,
(sum(quantity)*price_per_unit) as profit
from retail
group by price_per_unit
order by profit desc
limit 1;

-- 9.Write a query to show top 3 customers per category--

with customer_sale as
 (
select product_category,customer_ID,sum(total_amount)as total,
row_number() over(partition by product_category order by sum(total_amount) desc )as rk
from retail 
group by product_category,customer_id
)
select product_category,customer_ID,total
from customer_sale
where rk<=3;

-- 10.Calculate the age group-wise sales distribution--

select
    case
        WHEN `Age` BETWEEN 18 AND 25 THEN '18-25'  
        WHEN `Age` BETWEEN 26 AND 40 THEN '26-40'  
        WHEN `Age` BETWEEN 41 AND 60 THEN '41-60'  
        ELSE '60+'  
   end as age_group,
    SUM(Total_amount) AS total_sales  
from retail
group by age_group
order by total_sales desc;
